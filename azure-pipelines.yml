trigger:
  branches:
    include:
      - main  # Runs pipeline on commits to main

pool:
  name: Default

variables:
  JMETER_VERSION: '5.6.3'
  JMETER_HOME: '$(Pipeline.Workspace)\\apache-jmeter-$(JMETER_VERSION)'
  TEST_SCRIPT: 'Jpetstore_Demo.jmx'
  RESULTS_FILE: 'results.jtl'
  REPORT_DIR: 'html-report'

steps:
  # Cleanup step to clear the JMeter folder
  - task: PowerShell@2
    displayName: 'Cleanup JMeter Folder'
    inputs:
      targetType: 'inline'
      script: |
        $workspacePath = "$(Pipeline.Workspace)"
        $jmeterDir = "$workspacePath\\apache-jmeter-$(JMETER_VERSION)"
        
        # Check if the JMeter directory exists and remove it
        if (Test-Path $jmeterDir) {
            Write-Host "Removing existing JMeter directory: $jmeterDir"
            Remove-Item -Recurse -Force $jmeterDir
        } else {
            Write-Host "No existing JMeter directory to remove."
        }

  # Show Pipeline.Workspace Path
  - task: PowerShell@2
    displayName: 'Show Pipeline.Workspace Path'
    inputs:
      targetType: 'inline'
      script: |
        Write-Host "Pipeline.Workspace: $(Pipeline.Workspace)"
        Write-Host "Build.SourcesDirectory: $(Build.SourcesDirectory)"

  # Download Apache JMeter
  - task: PowerShell@2
    displayName: 'Download Apache JMeter'
    inputs:
      targetType: 'inline'
      script: |
        Invoke-WebRequest -Uri "https://downloads.apache.org/jmeter/binaries/apache-jmeter-$(JMETER_VERSION).zip" -OutFile jmeter.zip
        Expand-Archive jmeter.zip -DestinationPath $(Pipeline.Workspace)

  # Run JMeter Test Plan
  - task: PowerShell@2
    displayName: 'Run JMeter Test Plan'
    inputs:
      targetType: 'inline'
      script: |
        $env:JMETER_HOME = "$(JMETER_HOME)"
        Write-Host "JMETER_HOME is set to: $env:JMETER_HOME"
        cd "$env:JMETER_HOME\\bin"
        .\jmeter.bat -n -t "$(Build.SourcesDirectory)\\$(TEST_SCRIPT)" -l "$(Build.SourcesDirectory)\\$(RESULTS_FILE)" -e -o "$(Build.SourcesDirectory)\\$(REPORT_DIR)"

  # Publish JMeter Results
  - task: PublishBuildArtifacts@1
    displayName: 'Publish JMeter Results'
    inputs:
      PathtoPublish: '$(Build.SourcesDirectory)\\$(REPORT_DIR)'
      ArtifactName: 'JMeterReport'
      publishLocation: 'Container'
