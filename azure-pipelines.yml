trigger:
- main  # Change to your branch

pool:
  vmImage: 'windows-latest'

variables:
  JMETER_VERSION: '5.6.3'
  JMETER_HOME: '$(Pipeline.Workspace)\\JMeterHome'
  TEST_SCRIPT: 'Jpetstore_Demo.jmx'
  RESULTS_FILE: 'results.jtl'
  REPORT_DIR: 'jmeter-report'

stages:
# Stage 1: Install JMeter
- stage: InstallJMeter
  displayName: 'Install JMeter'
  jobs:
    - job: InstallJMeter
      steps:
        - script: |
            echo Installing JMeter...
            cd "$(Build.SourcesDirectory)"
            curl -L https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-$(JMETER_VERSION).zip -o jmeter.zip
            tar -xf jmeter.zip
            dir
          displayName: 'Download & Extract JMeter'
        
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)\\apache-jmeter-$(JMETER_VERSION)'
            ArtifactName: 'JMeterHome'
            publishLocation: 'Container'

# Stage 2: Run JMeter Test
- stage: RunJMeterTest
  displayName: 'Run JMeter Test'
  dependsOn: InstallJMeter
  jobs:
    - job: RunTest
      steps:
        - task: DownloadBuildArtifacts@0
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'JMeterHome'
            downloadPath: '$(Pipeline.Workspace)'

        - script: |
            echo Running JMeter Test on Windows...
            cd "$(Build.SourcesDirectory)"
            "$(JMETER_HOME)\\bin\\jmeter.bat" -n -t "$(Build.SourcesDirectory)\\$(TEST_SCRIPT)" -l "$(Build.SourcesDirectory)\\$(RESULTS_FILE)" -e -o "$(Build.SourcesDirectory)\\$(REPORT_DIR)"
          displayName: 'Run JMeter Test'

        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.SourcesDirectory)\$(REPORT_DIR)'
            ArtifactName: 'JMeterResults'
            publishLocation: 'Container'
