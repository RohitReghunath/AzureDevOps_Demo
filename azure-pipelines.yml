trigger:
- none  # Trigger is defined in schedule, no auto trigger on push.

schedules:
- cron: "0 0 * * *"  # This triggers every day at midnight (adjust the cron expression as needed).
  displayName: "Daily Trigger"
  branches:
    include:
      - main

variables:
  uniqueTimestamp: "$(Build.BuildId)"  # Using Build.BuildId as unique identifier
  jtlFileName: "result-$(Build.BuildId).jtl"  # JTL file name using BuildId
  reportFolderName: "jmeter-report-$(Build.BuildId)"  # Unique report folder name using BuildId

stages:
  - stage: Prepare
    jobs:
      - job: PrepareEnvironment
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              # Install dependencies
              sudo apt-get update
              sudo apt-get install -y wget unzip
              wget https://dlcdn.apache.org/jmeter/binaries/apache-jmeter-5.6.3.tgz
              tar -xvzf apache-jmeter-5.6.3.tgz
              export JMETER_HOME=$(pwd)/apache-jmeter-5.6.3
              echo "##vso[task.setvariable variable=JMETER_HOME]$JMETER_HOME"
            displayName: 'Install JMeter 5.6.3'

  - stage: CheckoutCode
    jobs:
      - job: CheckoutGitHub
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self  # Checkout code from repository
          - script: |
              git clone https://github.com/RohitReghunath/AzureDevOps_Demo.git
              cd AzureDevOps_Demo
            displayName: 'Clone GitHub Repository and Checkout Test Scripts'

  - stage: RunJMeterTest
    jobs:
      - job: RunTest
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - checkout: self
          - script: |
              # Run JMeter test with a unique result file
              $JMETER_HOME/bin/jmeter -n -t $(Build.SourcesDirectory)/AzureDevOps_Demo/Jpetstore_Demo.jmx -l $(Build.ArtifactStagingDirectory)/$(jtlFileName)
            displayName: 'Run JMeter Performance Test'

  - stage: GenerateReport
    jobs:
      - job: GenerateHTMLReport
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              # Generate HTML Report from the unique JTL file
              $JMETER_HOME/bin/jmeter -g $(Build.ArtifactStagingDirectory)/$(jtlFileName) -o $(Build.ArtifactStagingDirectory)/$(reportFolderName)
            displayName: 'Generate JMeter HTML Report'
          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/$(reportFolderName)'
              includeRootFolder: false
              archiveFile: '$(Build.ArtifactStagingDirectory)/$(reportFolderName).zip'
            displayName: 'Compress and Archive JMeter Report'

  - stage: Cleanup
    jobs:
      - job: CleanupEnvironment
        pool:
          vmImage: 'ubuntu-latest'
        steps:
          - script: |
              # Clean up temporary files
              rm -rf apache-jmeter-5.6.3
              rm -f $(Build.ArtifactStagingDirectory)/$(jtlFileName)
            displayName: 'Cleanup Temporary Files'
